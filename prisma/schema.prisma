// Prisma schema for Grumpy Tracker
// Run `npx prisma migrate dev` to apply

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id @default(uuid())
  email             String   @unique
  name              String
  password_hash     String
  preferred_language String  @default("en")
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  timeEntries       TimeEntry[]
  settings          Settings?
  deactivated        Boolean? @default(false)
  workPeriods       WorkPeriod[]
  absences          Absence[]
  flex_balance        Int      @default(0)
}

model TimeEntry {
  id                String   @id @default(uuid())
  user              User     @relation(fields: [user_id], references: [id])
  user_id           String
  date              String   // YYYY-MM-DD
  travel_start_time Int?
  work_start_time   Int
  work_end_time     Int
  break_start_time  Int[]
  break_end_time    Int[]
  travel_end_time   Int?
  extraTimes        ExtraTime[]
  comments          String?
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  @@unique([user_id, date])
}

model ExtraTime {
  id         String   @id @default(uuid())
  timeEntry  TimeEntry @relation(fields: [time_entry_id], references: [id])
  time_entry_id String
  start      Int   // minuter från midnatt
  end        Int   // minuter från midnatt
  type       String? // e.g. "evening", "overtime", etc
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model WorkPeriod {
  id               String   @id @default(uuid())
  user             User     @relation(fields: [user_id], references: [id])
  user_id          String
  name             String
  start            DateTime
  end              DateTime
  work_time_minutes Int
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
}

model Settings {
  id                String   @id @default(uuid())
  user              User     @relation(fields: [user_id], references: [id])
  user_id           String   @unique
  normal_work_time  Int      @default(480) // minutes
}

model Absence {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [user_id], references: [id])
  user_id    String
  date       String   // YYYY-MM-DD
  type       String   // 'vacation', 'sickness', 'care_of_sick_child', etc
  full_day   Boolean  // true = full day, false = partial
  start_time Int?     // minutes from midnight (if partial)
  end_time   Int?     // minutes from midnight (if partial)
  comments   String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

/// Session table for connect-pg-simple (managed by Prisma)
model Session {
  sid         String   @id @db.VarChar(255)
  sess        Json
  expire      DateTime @db.Timestamp(6)
  created_at  DateTime @default(now())

  @@map("session")
}
