<!DOCTYPE html>
<html lang="<%= (user && user.preferred_language) || 'en' %>">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Grumpy Tracker</title>
    <link href="/public/tailwind.css" rel="stylesheet">
  </head>
  <body class="bg-grumpy-dark min-h-screen flex flex-col font-sans text-grumpy-offwhite">
    <!-- Remove duplicate header and logo, only keep menu -->
    <%- include('partials/menu', { user, csrfToken, currentPath }) %>
    <main class="flex-1 flex flex-col p-4 sm:p-6">
      <div class="w-full max-w-5xl mx-auto flex flex-col md:flex-row gap-6 items-stretch">
        <!-- Left column: Flex Time + Todays Time Log stacked -->
        <div class="flex flex-col gap-6 max-w-xs w-full md:w-64">
          <div class="flex flex-col bg-grumpy-dark2 border border-grumpy-orange rounded-2xl shadow-xl p-4 sm:p-6 pointer-events-auto self-start md:self-start mx-auto md:mx-0 h-full w-full">
            <div class="w-full">
              <h2 class="text-lg font-bold text-grumpy-orange mb-3">
                <%= t('flex_time', 'Flex Time') %>
              </h2>
              <div class="flex flex-col gap-2 w-full">
                <div class="flex justify-between items-center">
                  <span class="font-semibold text-grumpy-offwhite"><%= t('dashboard.flex_time_work', 'Arbete:') %></span>
                  <span class="text-xl font-extrabold text-grumpy-orange"><%= formatFlexTime(user.flex_balance) %></span>
                </div>
                <div class="flex justify-between items-center">
                  <span class="font-semibold text-grumpy-offwhite"><%= t('dashboard.flex_time_work_travel', '+ Restid:') %></span>
                  <span class="text-xl font-extrabold text-grumpy-orange"><%= formatFlexTime(user.flex_balance_travel) %></span>
                </div>
              </div>
            </div>
          </div>
          <!-- Todays Time Log Widget -->
          <div class="flex flex-col bg-grumpy-dark2 border border-grumpy-orange rounded-2xl shadow-xl p-4 sm:p-6 pointer-events-auto self-start md:self-start mx-auto md:mx-0 h-full w-full">
            <div class="w-full">
              <h2 class="text-lg font-bold text-grumpy-orange mb-3">
                <%= t('dashboard.todays_time_log', 'Todays time log') %>
              </h2>
              <div class="flex flex-col gap-2 mt-4">
                <% if (!todaysEntry || !todaysEntry.travel_start_time) { %>
                <form hx-post="/time/today/travel-start" hx-swap="none" method="post" action="/time/today/travel-start">
                  <input type="hidden" name="_csrf" value="<%= csrfToken %>" />
                  <button type="submit" class="w-full bg-grumpy-orange text-grumpy-dark2 font-semibold rounded py-2 mb-2 hover:bg-grumpy-dark2 hover:text-grumpy-orange border border-grumpy-orange transition">
                    <%= t('dashboard.start_travel', 'Start travel') %>
                  </button>
                </form>
                <% } %>
                <% if (!todaysEntry || !todaysEntry.work_start_time) { %>
                <form hx-post="/time/today/work-start" hx-swap="none" method="post" action="/time/today/work-start">
                  <input type="hidden" name="_csrf" value="<%= csrfToken %>" />
                  <button type="submit" class="w-full bg-grumpy-orange text-grumpy-dark2 font-semibold rounded py-2 mb-2 hover:bg-grumpy-dark2 hover:text-grumpy-orange border border-grumpy-orange transition">
                    <%= t('dashboard.start_work', 'Start work') %>
                  </button>
                </form>
                <% } %>
                <% 
                  // Show Start/Stop break only if work has started and not ended
                  const workStarted = todaysEntry && typeof todaysEntry.work_start_time === 'number' && todaysEntry.work_start_time > 0;
                  const workEnded = todaysEntry && typeof todaysEntry.work_end_time === 'number' && todaysEntry.work_end_time > 0;
                  const breaks = (todaysEntry && Array.isArray(todaysEntry.break_start_time)) ? todaysEntry.break_start_time : [];
                  const breaksEnd = (todaysEntry && Array.isArray(todaysEntry.break_end_time)) ? todaysEntry.break_end_time : [];
                  const breakOngoing = breaks.length > 0 && (breaksEnd.length < breaks.length || breaksEnd[breaks.length-1] == null);
                %>
                <% if (workStarted && !workEnded) { %>
                  <% if (!breakOngoing) { %>
                  <form hx-post="/time/today/break-start" hx-swap="none" method="post" action="/time/today/break-start">
                    <input type="hidden" name="_csrf" value="<%= csrfToken %>" />
                    <button type="submit" class="w-full bg-grumpy-orange text-grumpy-dark2 font-semibold rounded py-2 mb-2 hover:bg-grumpy-dark2 hover:text-grumpy-orange border border-grumpy-orange transition">
                      <%= t('dashboard.start_break', 'Start break') %>
                    </button>
                  </form>
                  <% } else { %>
                  <form hx-post="/time/today/break-end" hx-swap="none" method="post" action="/time/today/break-end">
                    <input type="hidden" name="_csrf" value="<%= csrfToken %>" />
                    <button type="submit" class="w-full bg-grumpy-orange text-grumpy-dark2 font-semibold rounded py-2 mb-2 hover:bg-grumpy-dark2 hover:text-grumpy-orange border border-grumpy-orange transition">
                      <%= t('dashboard.stop_break', 'Stop break') %>
                    </button>
                  </form>
                  <% } %>
                <% } %>
                <% if (!workEnded) { %>
                <form hx-post="/time/today/work-end" hx-swap="none" method="post" action="/time/today/work-end">
                  <input type="hidden" name="_csrf" value="<%= csrfToken %>" />
                  <button type="submit" class="w-full bg-grumpy-orange text-grumpy-dark2 font-semibold rounded py-2 mb-2 hover:bg-grumpy-dark2 hover:text-grumpy-orange border border-grumpy-orange transition">
                    <%= t('dashboard.stop_work', 'Stop work') %>
                  </button>
                </form>
                <% } %>
                <% if (todaysEntry && todaysEntry.travel_start_time && !(typeof todaysEntry.travel_end_time === 'number' && todaysEntry.travel_end_time > 0)) { %>
                <form hx-post="/time/today/travel-end" hx-swap="none" method="post" action="/time/today/travel-end">
                  <input type="hidden" name="_csrf" value="<%= csrfToken %>" />
                  <button type="submit" class="w-full bg-grumpy-orange text-grumpy-dark2 font-semibold rounded py-2 hover:bg-grumpy-dark2 hover:text-grumpy-orange border border-grumpy-orange transition">
                    <%= t('dashboard.stop_travel', 'Stop travel') %>
                  </button>
                </form>
                <% } %>
                <% // Extratid-knappar: visas om workEnded %>
                <% 
                  const extraTimes = (todaysEntry && Array.isArray(todaysEntry.extraTimes)) ? todaysEntry.extraTimes : [];
                  // Extratid pågående: senaste extra saknar end eller end är 0
                  const extraOngoing = extraTimes && extraTimes.length > 0 && (extraTimes[extraTimes.length-1].end === 0);
                %>
                <% if (workEnded) { %>
                  <% if (!extraOngoing) { %>
                  <form hx-post="/time/today/extra-start" hx-swap="none" method="post" action="/time/today/extra-start">
                    <input type="hidden" name="_csrf" value="<%= csrfToken %>" />
                    <button type="submit" class="w-full bg-grumpy-orange text-grumpy-dark2 font-semibold rounded py-2 mb-2 hover:bg-grumpy-dark2 hover:text-grumpy-orange border border-grumpy-orange transition">
                      <%= t('dashboard.start_extra', 'Starta extratid') %>
                    </button>
                  </form>
                  <% } else { %>
                  <form hx-post="/time/today/extra-end" hx-swap="none" method="post" action="/time/today/extra-end">
                    <input type="hidden" name="_csrf" value="<%= csrfToken %>" />
                    <button type="submit" class="w-full bg-grumpy-orange text-grumpy-dark2 font-semibold rounded py-2 mb-2 hover:bg-grumpy-dark2 hover:text-grumpy-orange border border-grumpy-orange transition">
                      <%= t('dashboard.stop_extra', 'Stoppa extratid') %>
                    </button>
                  </form>
                  <% } %>
                <% } %>
              </div>
            </div>
          </div>
        </div>
        <!-- Flex Graph Card -->
        <div class="bg-grumpy-dark2 border border-grumpy-orange rounded-2xl shadow-lg p-4 sm:p-8 flex flex-col flex-1 min-w-0 max-w-3xl h-full">
          <h2 class="text-xl font-bold text-grumpy-orange mb-4"><%= t('dashboard.flex_graph', 'Work & Travel Time') %></h2>
          <form method="get" class="mb-4 flex flex-wrap gap-2 items-center">
            <label for="period" class="text-grumpy-offwhite font-semibold"><%= t('dashboard.period', 'Period') %>:</label>
            <select id="period" name="period" class="bg-grumpy-dark2 border border-grumpy-orange rounded p-1 text-grumpy-offwhite" onchange="togglePeriodSelectors()">
              <option value="week" <%= period === 'week' ? 'selected' : '' %>><%= t('dashboard.week', 'Week') %></option>
              <option value="month" <%= period === 'month' ? 'selected' : '' %>><%= t('dashboard.month', 'Month') %></option>
              <option value="year" <%= period === 'year' ? 'selected' : '' %>><%= t('dashboard.year', 'Year') %></option>
            </select>
            <select id="month-select" name="month" class="bg-grumpy-dark2 border border-grumpy-orange rounded p-1 text-grumpy-offwhite" style="display:none">
              <% for (let m = 0; m < 12; m++) { %>
                <option value="<%= m %>" <%= (typeof month !== 'undefined' && Number(month) === m) ? 'selected' : (new Date().getMonth() === m && period === 'month' ? 'selected' : '') %>><%= new Date(2000, m, 1).toLocaleString((user && user.preferred_language) || 'en', { month: 'long' }) %></option>
              <% } %>
            </select>
            <select id="week-select" name="week" class="bg-grumpy-dark2 border border-grumpy-orange rounded p-1 text-grumpy-offwhite" style="display:none">
              <% for (let w = 1; w <= 53; w++) { %>
                <option value="<%= w %>" <%= (typeof week !== 'undefined' && Number(week) === w) ? 'selected' : (w === currentWeek && period === 'week' ? 'selected' : '') %>>W<%= w %></option>
              <% } %>
            </select>
            <button type="submit" class="bg-grumpy-orange text-grumpy-dark2 px-3 py-1 rounded font-semibold hover:bg-grumpy-dark2 hover:text-grumpy-orange border border-grumpy-orange transition"><%= t('dashboard.show', 'Show') %></button>
          </form>
          <script>
            function togglePeriodSelectors() {
              var period = document.getElementById('period').value;
              document.getElementById('month-select').style.display = period === 'month' ? '' : 'none';
              document.getElementById('week-select').style.display = period === 'week' ? '' : 'none';
            }
            document.addEventListener('DOMContentLoaded', togglePeriodSelectors);
          </script>
          <div class="w-full overflow-x-auto">
            <canvas id="flexChart" class="max-w-full" width="400" height="200"></canvas>
          </div>
        </div>
      </div>
    </main>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
var chartLabels = JSON.parse('<%- JSON.stringify(chartLabels) %>');
var chartWork = JSON.parse('<%- JSON.stringify(chartWork) %>');
var chartWorkTravel = JSON.parse('<%- JSON.stringify(chartWorkTravel) %>');
var chartNormal = JSON.parse('<%- JSON.stringify(chartNormal) %>');
var hoursShort = "<%= t('hours_short', 'h') %>";
const ctx = document.getElementById('flexChart').getContext('2d');
const flexChart = new Chart(ctx, {
  type: 'line',
  data: {
    labels: chartLabels,
    datasets: [
      {
        label: "<%= t('dashboard.work_time', 'Work Time') %>",
        data: chartWork,
        borderColor: '#e76a2e',
        backgroundColor: 'rgba(231,106,46,0.1)',
        fill: true,
        tension: 0.3
      },
      {
        label: "<%= t('dashboard.work_travel_time', 'Work + Travel Time') %>",
        data: chartWorkTravel,
        borderColor: '#f6eadd',
        backgroundColor: 'rgba(246,234,221,0.1)',
        fill: true,
        tension: 0.3
      },
      {
        label: "<%= t('dashboard.normal_time', 'Normal Time') %>",
        data: chartNormal,
        borderColor: '#3b82f6', // blue
        borderDash: [6, 6],
        pointRadius: 0,
        fill: false,
        tension: 0,
        borderWidth: 2
      }
    ]
  },
  options: {
    responsive: true,
    plugins: {
      legend: { labels: { color: '#f6eadd' } }
    },
    scales: {
      x: { ticks: { color: '#f6eadd' } },
      y: {
        ticks: {
          color: '#f6eadd',
          callback: function(value) {
            return value + ' ' + hoursShort;
          }
        },
        title: {
          display: true,
          text: hoursShort,
          color: '#f6eadd'
        }
      }
    }
  }
});
    </script>
    <% 
function formatFlexTime(min) {
  min = Number(min) || 0;
  const sign = min < 0 ? '-' : '';
  min = Math.abs(min);
  if (min >= 60) {
    const h = Math.floor(min / 60);
    const m = min % 60;
    return `${sign}${h} h${m > 0 ? ' ' + m + ' min' : ''}`;
  }
  return `${sign}${min} min`;
}
%>
    <%- include('partials/footer') %>
  </body>
</html>
